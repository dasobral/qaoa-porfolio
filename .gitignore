# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated by cargo mutants
# Contains mutation testing data
**/mutants.out*/

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Compiled binaries and libraries
*.o
*.a
*.so
*.dll
*.exe

# Rust specific
debug
/target/
**/*.rs.bk
Cargo.lock

# Python specific
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.conda/

# Jupyter Notebook
.ipynb_checkpoints

# PyCharm
.idea/

# VS Code
.vscode/

# Quantum computing specific

# Data files (large datasets)
data/real_market_data/
data/downloads/
*.csv
*.json
*.h5
*.hdf5
*.parquet

# Results and outputs
results/
output/
logs/
*.log

# Temporary files
*.tmp
*.temp
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Performance benchmarks
benchmarks/results/
performance_*.json
timing_*.csv

# Environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# API keys and secrets
secrets/
config/secrets.json
*.key
*.pem

# Documentation build
docs/_build/
docs/site/

# Package managers
yarn.lock
package-lock.json

# Operating system files
*.swp
*.swo
*~
.nfs*

# Profiling data
*.prof
perf.data*
callgrind.out.*

# Core dumps
core
core.*

# Backup files
*.bak
*.backup


# Added by cargo

/target
results/

# CLAUDE
CLAUDE.md